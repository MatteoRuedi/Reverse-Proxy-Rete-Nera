Apache Traffic Server
Installation

In questo esempio, Apache Traffic Server service ascolta TCP port 80.
In questo esempio, Webserver ascolta TCP port 8080(dovrebbe ascoltare su qualsiasi).


##Installazione del servizio
apt-get update
apt-get install trafficserver

##configurare il records.config file
vi /etc/trafficserver/records.config

##aggiungere questa riga nel file
CONFIG proxy.config.http.server_ports STRING 80 80:ipv6

##restartare il servizio
service trafficserver restart

##configurare il remap.config file
vi /etc/trafficserver/remap.config

##Aggiungere in fondo al file questa riga
map http://ipWebServer/  http://127.0.0.1:8080/
service trafficserver restart

##controllare che rp ascolta sulla 80
 netstat -nl | grep :80

 OUTPUT RICHIESTO
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN
tcp6       0      0 :::80                   :::*                    LISTEN



GESTIRE CACHE CON 500MB  NON CHIARO VERIFICARE

##modifica file di conf
vi /etc/trafficserver/storage.config
/var/cache/trafficserver 500M

##valori predefiniti
CONFIG proxy.config.cache.ram_cache.size INT -1
CONFIG proxy.config.cache.ram_cache_cutoff INT 4194304
CONFIG proxy.config.cache.max_doc_size INT 0

service trafficserver restart





Pound
software installation
sudo apt-get install pound

##Under Debian / Ubuntu default file located at /etc/pound/pound.cfg

##mdifica de√© config file
vi /etc/pound/pound.cfg

ListenHTTP
         Address 202.54.1.5
         Port    80
         Service
                  BackEnd
                       Address 192.168.1.5
                       Port    8080
                  End
          End
End

##Chiudere il file e restrtare processo
/etc/init.d/pound restart

##Per tutte le richieste http/https

ListenHTTP
          Address 202.54.1.5
          Port    80
End

ListenHTTPS
         Address 202.54.1.5
         Port    443
         Cert    "/etc/ssl/local.server.pem"
End
Service
                  BackEnd
                      Address 192.168.1.5
                      Port    80
                  End
                  BackEnd
                      Address 192.168.1.6
                      Port    80
                  End
End

##Generare certificato ssl 
cd /etc/ssl && openssl req -x509 -newkey rsa:1024 -keyout local.server.pem -out local.server.pem -days 365 -nodes

##FILE DI CONF COMPLETO
## Minimal sample pound.cfg
##############################
## global options:
User		"www-data"
Group		"www-data"
#RootJail	"/chroot/pound"
## Logging: (goes to syslog by default)
##	0	no logging
##	1	normal
##	2	extended
##	3	Apache-style (common log format)
LogLevel	1
## check backend every X secs:
Alive		30
## use hardware-accelleration card supported by openssl(1):
#SSLEngine	""

######################################################################
## listen, redirect and ... to:
# Here is a more complex example: assume your static images (GIF/JPEG) are to be served from  a  single  back-end  192.168.0.10.  In
#       addition,  192.168.0.11  is  to  do  the  hosting for www.myserver.com with URL-based sessions, and 192.168.0.20 (a 1GHz PIII) and
#       192.168.0.21 (800Mhz Duron) are for all other requests (cookie-based sessions).  The logging will be done by the back-end servers.
#       The configuration file may look like this:
              # Main listening ports
              ListenHTTP
                  Address 202.54.1.10
                  Port    80
                  Client  10
              End
              ListenHTTPS
                  Address 202.54.1.10
                  Port    443
                  Cert    "/etc/pound/pound.pem"
                  Client  20
              End

              # Image server
              Service
                  URL ".*.(jpg|gif)"
                  BackEnd
                      Address 192.168.1.10
                      Port    80
                  End
              End
             # Virtual host www.myserver.com
              Service
                  URL         ".*sessid=.*"
                  HeadRequire "Host:.*www.nixcraft.com.*"
                  BackEnd
                      Address 192.168.1.11
                      Port    80
                  End
                  Session
                      Type    PARM
                      ID      "sessid"
                      TTL     120
                  End
              End

              # Everybody else
              Service
                  BackEnd
                      Address 192.168.1.20
                      Port    80
                      Priority 5
                  End
                  BackEnd
                      Address 192.168.1.21
                      Port    80
                      Priority 4
                  End
                  Session
                      Type    COOKIE
                      ID      "userid"
                      TTL     180
                  End
              End